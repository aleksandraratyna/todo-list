import { Component, Output, OnInit, EventEmitter } from '@angular/core';

@Component({
  selector: 'todo-input',
  template: `
    <!--<p>
      input works!
    </p>
    <input [value]="title" (keyup)="changeTitle('Stop typing!')">
    <input [value]="title" (keyup.enter)="changeTitle($event.target.value)"      // changeTitle(newTitle: string): void {this.title = newTitle};     -->
    <div class="todo-input">
    <input [value]="title" (keyup.enter)="changeTitle(inputElement.value)" #inputElement>
    <button class="btn" (click)="changeTitle(inputElement.value)">Save</button></div>
    <!--<p>The title is: {{ title }}</p>-->
  `,
  styleUrls: ['./input.component.css']
})
export class InputComponent implements OnInit {
title: string = 'type an activity';

  //changeTitle(event): void {
    //console.log(event);
    //this.title = event.target.value;
  //}                                                  //tylko wtedy gdy wyżej changeTitle($event)
  //changeTitle(inputElementReference): void {
    //console.log(inputElementReference);
    //this.title = inputElementReference.value};

  generateTitle(): string {return 'This title was generated by a method.';}
  //generateTitle = () => this.title = 'This title was generated by a method.';                     //można i tak zamiast return

  constructor() { 
    //this.title = "Hello World!";
    //this.changeTitle('I love Angular!')
    //console.log(this.changeTitle('zupełnie nowy tytuł'));
  }

  ngOnInit() {
    //setTimeout(this.generateTitle, 3000)
    //setTimeout(() => {this.title="This is not the title you are looking for."}, 3000)
    //this.title = "Witajta :]";
    //this.changeTitle('I love Angular!')
    //console.log ("Siema");
  }

  @Output() submit: EventEmitter<string> = new EventEmitter();

  changeTitle(newTitle: string): void {
    this.submit.emit(newTitle);
  }

}
